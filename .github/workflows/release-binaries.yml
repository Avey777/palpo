# GitHub actions workflow which builds the release artifacts.

name: Release binary artifacts

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    # branches: [main, next]
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

#  https://github.com/taiki-e/cargo-hack/blob/main/.github/workflows/release.yml
jobs:
  create-release:
    name: Create GitHub release
    # only publish from the origin repository
    if: github.repository_owner == 'palpo-im'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/create-gh-release-action@v1.3.0
        with:
          # changelog: "CHANGELOG.md"
          title: "$version"
          branch: main
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-binaries:
    name: "Upload release binaries"
    if: github.repository_owner == 'palpo-im'
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # include:
        #   - target: x86_64-unknown-linux-gnu
        #     os: ubuntu-22.04
        #   - target: x86_64-unknown-linux-musl
        #   - target: x86_64-pc-windows-msvc
        #     os: windows-2022
        #   - target: universal-apple-darwin
        #     os: macos-13
    # runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: palpo
          include: palpo-example.toml
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
    # steps:
    #   - uses: taiki-e/checkout-action@v1
    #   - uses: taiki-e/github-actions/install-rust@stable
    #   - uses: taiki-e/setup-cross-toolchain-action@v1
    #     with:
    #       target: ${{ matrix.target }}
    #   - run: printf '%s\n' "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >>"${GITHUB_ENV}"
    #     if: contains(matrix.target, '-windows-msvc')
    #   - run: printf '%s\n' "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static -C link-self-contained=yes" >>"${GITHUB_ENV}"
    #     if: contains(matrix.target, '-linux-musl')
    #   - run: printf 'MACOSX_DEPLOYMENT_TARGET=11.0\n' >>"${GITHUB_ENV}"
    #     if: matrix.target == 'aarch64-apple-darwin' || matrix.target == 'universal-apple-darwin'
    #   - uses: taiki-e/upload-rust-binary-action@v1
    #     with:
    #       bin: palpo
    #       include: palpo-example.toml
    #       target: ${{ matrix.target }}
    #       tar: all
    #       zip: windows
    #       token: ${{ secrets.GITHUB_TOKEN }}