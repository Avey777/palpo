# GitHub actions workflow which builds the release artifacts.

name: Release binary artifacts

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    # branches: [main, next]
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

#  https://github.com/taiki-e/cargo-hack/blob/main/.github/workflows/release.yml
jobs:
  create-release:
    name: Create GitHub release
    # only publish from the origin repository
    if: github.repository_owner == 'palpo-im'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/create-gh-release-action@v1.3.0
        with:
          changelog: "CHANGELOG.md"
          title: "$version"
          branch: main
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-binaries:
    name: "Upload release binaries"
    if: github.repository_owner == 'palpo-im'
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Install PostgreSQL development libraries
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libpq-dev
      - name: Install PostgreSQL development libraries (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install postgresql
      - name: Install PostgreSQL development libraries (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install postgresql --no-progress
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: palpo
          include: palpo-example.toml
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}